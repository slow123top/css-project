.flex-container {
    /* 第一个属性  设置flex布局为  弹性布局 */
    display: -webkit-flex;
    display: flex;
    width: 300px;
    /* height: 200px; */
    /* 第二个属性  设置主轴方向  四个方向 */
    /* 主轴方向  横向 从左到右 */
    flex-direction: row;
    /* 主轴方向  横向 从右向左 */
    /* flex-direction: row-reverse; */
    /* 主轴方向  纵向 从上到下 */
    /* flex-direction: column; */
    /* 主轴方向  横向 从下到上 */
    /* flex-direction: column-reverse; */
    /* 第三个属性  设置弹性项目的排列方式  三种方式  不换行  换行  换行反转 */
    flex-wrap: nowrap;
    /* flex-wrap: wrap; */
    /* flex-wrap: wrap-reverse; */
    /* 第四个属性   是第二个属性和第三个属性的简写  如下就是简写的那两个属性*/
    /* flex-flow: row nowrap; */
    /* 第五个属性   设置弹性项目在主轴上的对齐方式  有点类似于grid布局的 start center end  两端对齐 等 */
    /* justify-content: flex-end; */
    /* justify-content: center; */
    /* 项目两侧间隔相等 */
    justify-content: space-around;
    /* 项目间隔相等  且两端对齐 */
    /* 第六个属性  设置项目在交叉轴上的对齐方式  交叉轴 */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
    align-items: center;
    /* 项目第一行文字的基线对齐 */
    /* align-items: baseline; */
    /* 若未设置宽度或者高度  将占满整个容器的宽度或者高度 */
    /* align-items: stretch; */
    /* 第七个属性  设置多根轴线的对齐方式 有6个值 一根轴线的话  此属性不起作用   所有的值都是相对于交叉轴*/
    /* align-content: flex-start;
    align-content: flex-end;
    align-content: center;
    align-content: space-around;
    align-content: space-between;
    align-content: stretch; */
}

.flex-item {
    /* 第一个属性  设置项目的排列顺序  越靠前越小 */
    /* order: 2; */
    /* 第二个属性  设置项目的放大比例 */
    /* flex-grow: 3; */
    /* 第三个属性  设置项目的缩小比例 */
    /* flex-shrink: 2; */
    /* 第四个属性  设置分配多余空间之前  项目占据的主轴空间 */
    /* flex-basis: auto; */
    /* 第五个属性  设置第二个到第三个属性的组合   默认值有1 1 auto和0 0 auto*/
    flex: 3 2 80px;
    /* 第六个属性  设置单个项目的对齐方式  可以覆盖 align-items的对齐方式  可以继承  */
    align-self: auto;
}

.flex-item_1 {
    background: #fff;
    
}

.flex-item_2 {
    background: #ff0;
}

.flex-item_3 {
    background: #000;
}

.flex-item_4 {
    background: #f00;
}

.flex-item_5 {
    background: #00f;
}